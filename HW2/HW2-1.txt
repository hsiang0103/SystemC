SystemC & Behavior Coding
Assignment 2, 2024-10-10
Abstract
Develop two (2) C programs. The first one analyzes a given text using 
while and string functions. The second one is to practice using pointers.
Please read carefully. All required outputs are described in the text. Five (5) 
points will be taken for each bug, missing required output, and behavior.
I. Text Processing
Description
1. Open any file (the text file) by command input, e.g. run TheTextFile.
2. Implement a function to count in the file
How many lines (how many '\n' in the file and also the EOF)
How many characters (alphanumeric characters only, i.e. 'A'~'Z', 
'a'~'z', and '0'~'9')
How many uppercase letters ('A'~'Z')
How many words (separated by spaces (' ') and '\n')
3. Then, implement another function that converts all the text into 
uppercase and writes to a file named "UPPER." For example, given an 
original text as "The fox in the fog –%&9 catch me if you can." and 
convert it into "THE FOX IN THE FOG –%&9 CATCH ME IF YOU CAN."
II. Pointers
Description
1. Use void* malloc(size_t size) to allocate argv[1] bytes of 
memory, i.e., argv[1] always is an integer. Do not write codes to 
check if argv[1] is an integer. Notice that you must turn argv[1], a 
char* type data, into the integer type to process. Please use atoi()
in stdlib.h for this conversion.
2. Use char* and a for loop, assign to the block of memory, byte-by-byte, 
'A' to 'Z' then '1' to '9' repeatedly, to fill up the allocated memory. Use 
one printf to print the string generated above.
3. Then use an int* and a while loop, in each iteration, print the 
memory content and its subtract 1 value in a pair of integers, e.g., 
1145258561 : 1145258560
4. In the integer process loop, you need to implement a guard to prevent 
segmentation faults.
Please turn in the source codes only. Do not turn in the executable.
Using Generative AI
It is encouraged to use Generative AI (GAI) to solve the problem. In seconds, 
you can generate the programs that function exactly as described in the specs 
above. If you use GAI to solve the problems:
1. For Text Processing, you must create at least 3 test text files, each at 
least 1,000 characters, to verify the program's correctness and also turn 
in these 3 test text files.
2. For Pointers, write a TESTPLAN file to describe a test plan and verify the 
program's correctness. Turn in the TESTPLAN file as well.
It is also allowed to use GAI to create the above 3 test text files and the 
TESTPLAN, just to make sure they can verify the program's correctness.
Due date
3:00PM, October 17th, 2024
Score weight (towards the final grade) 5%
